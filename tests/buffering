TEST_DESCRIPTION="Buffering test."
source test_header.sh

function lots_of_noise() {
    nkk=$(for i in {1..3000}; do
	echo -n "$RANDOM " # Make a long line
	done | tr '\n' ' ')
    nkk2=$(for i in {1..50} ; do echo -n $nkk; done) # Make a longer line
    for i in {1..100}; do echo $RANDOM $nkk2; done # Make lines slightly unique
}

function fltr() { cat $1 | tr 5 6 ; }

if [[ ! -f buffering.ref ]] ; then
    echo "Making reference data."
    lots_of_noise | split -l1 - buffering.data
    cat buffering.data* | fltr - | sort > buffering.ref
fi

rm -f buffering.dat{1,1b,10,10b}

PRLL_NR_CPUS=1 prll -b fltr buffering.data* \
    > buffering.dat1 || exit 1

PRLL_NR_CPUS=1 prll fltr buffering.data* \
    > buffering.dat1b || exit 1

PRLL_NR_CPUS=10 prll -b fltr buffering.data* \
    > buffering.dat10 || exit 1

PRLL_NR_CPUS=10 prll fltr buffering.data* \
    > buffering.dat10b || exit 1

stats=0
sort buffering.dat1 | diff -q buffering.ref -
if [[ $? -ne 0 ]] ; then
    stats=1
    echo "Unbuffered serial execution produced wrong results."
else
    echo "Unbuffered serial execution produced correct results."
fi
sort buffering.dat1b | diff -q buffering.ref -
if [[ $? -ne 0 ]] ; then
    stats=1
    echo "Buffered serial execution produced wrong results."
else
    echo "Buffered serial execution produced correct results."
fi
sort buffering.dat10 | diff -q buffering.ref -
if [[ $? -ne 0 ]] ; then
    echo "Unbuffered parallel execution produced wrong results, as expected."
else
    echo "Unbuffered parallel execution produced correct results,"
    echo "which is rather unexpected."
fi
sort buffering.dat10b | diff -q buffering.ref -
if [[ $? -ne 0 ]] ; then
    stats=1
    echo "Buffered parallel execution produced wrong results."
else
    echo "Buffered parallel execution produced correct results."
fi
exit $stats
